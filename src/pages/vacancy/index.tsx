import React from 'react';
import Head from 'next/head';
import Image from 'next/image';
import Link from 'next/link';

import { useRouter } from 'next/router';

import { Button, Loader, Provider, Sidebar, VacancyItem } from '@/components';
import { getVacancyList } from '../api/vacancy';
import { UserProps } from '@/components/types';

import styles from '@/styles/page/Vacancy.module.scss';

import userAvatar from '@/assets/user.svg';

export default function Vacancy() {
  const [errorServer, setErrorServer] = React.useState<any>(null);

  const [user, setUser] = React.useState<UserProps | null>(null);

  const [vacancyList, setVacancyList] = React.useState([]);
  const [search, setSearch] = React.useState('');

  React.useEffect(() => {
    if (!vacancyList.length) {
      getVacancyList(setErrorServer, setVacancyList);
    }
  }, [vacancyList.length]);

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Provider user={user} setUser={setUser}>
        <main className="main">
          <Sidebar user={user} />

          <section className="section vacancy">
            {user ? (
              <div className="container">
                <h1 className="title">Ваканції</h1>
                <div className={styles.search}>
                  <div className="input">
                    <input
                      value={search}
                      onChange={(e) => setSearch(e.target.value)}
                      type="text"
                      placeholder="пошук"
                    />
                  </div>
                </div>
                <div className={`${styles.content} ${styles.list}`}>
                  {vacancyList.length
                    ? vacancyList
                        .filter((item: { specialization: string }) => {
                          const name = item?.specialization?.toLocaleLowerCase();
                          return (
                            name?.includes(search.toLocaleLowerCase()) ||
                            name?.includes(search.toLocaleLowerCase())
                          );
                        })
                        .map(
                          (item: {
                            id: string;
                            specialization: string;
                            descriptionsCompany: string;
                            nameCompany: string;
                            webSite: string;
                          }) => (
                            <VacancyItem
                              specialization={item.specialization}
                              key={item.id}
                              id={item.id}
                              descriptionsCompany={item.descriptionsCompany}
                              nameCompany={item.nameCompany}
                              webSite={item.webSite}
                            />
                          ),
                        )
                    : 'немає ваканцій'}
                </div>
              </div>
            ) : (
              <Loader />
            )}
          </section>
        </main>
      </Provider>
    </>
  );
}
